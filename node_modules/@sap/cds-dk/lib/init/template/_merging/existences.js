// This file describes so-called "modules" and "resources" commonly
// found in mta.yaml files.
// The following matchers contain the *required* constraints to
// identify a YAML node as a semantic equivalent of the matcher.

const srvNode = {
    ref: "srv",
    keyPath: ["modules"],
    constraints: [{
        comparisonKeyPath: ["type"],
        value: "nodejs"
    }],
}

const srvJava = {
    ref: "srv",
    keyPath: ["modules"],
    constraints: [{
        comparisonKeyPath: ["type"],
        value: "java"
    }],
}

const approuter = {
    ref: "approuter",
    keyPath: ["modules"],
    constraints: [{
        comparisonKeyPath: ["type"],
        value: "approuter.nodejs"
    }],
    spaceBefore: true
}

const xsuaa = {
    ref: "uaa-resource",
    keyPath: ["resources"],
    constraints: [{
        comparisonKeyPath: ["type"],
        value: "org.cloudfoundry.managed-service",
    }, {
        comparisonKeyPath: ["parameters", "service"],
        value: "xsuaa",
    }, {
        comparisonKeyPath: ["parameters", "service-plan"],
        value: "application"
    }],
    spaceBefore: true
}

const auditlog = {
    ref: "auditlog-resource",
    keyPath: ["resources"],
    constraints: [{
        comparisonKeyPath: ["type"],
        value: "org.cloudfoundry.managed-service",
    }, {
        comparisonKeyPath: ["parameters", "service"],
        value: "auditlog-api",
    }],
    spaceBefore: true
}

const kibanaLogging = {
    ref: "cf-logging",
    keyPath: ["resources"],
    constraints: [{
        comparisonKeyPath: ["type"],
        value: "org.cloudfoundry.managed-service",
    }, {
        comparisonKeyPath: ["parameters", "service"],
        value: "application-logs",
    }, {
        comparisonKeyPath: ["parameters", "service-plan"],
        value: "lite",
    }],
    spaceBefore: true
}

const hdbDeployer = {
    ref: "deployer",
    keyPath: ["modules"],
    constraints: [{
        comparisonKeyPath: ["type"],
        value: "hdb"
    }],
    spaceBefore: true
}

const hdiContainer = {
    ref: "hdi-container-resource",
    keyPath: ["resources"],
    constraints: [{
        comparisonKeyPath: ["type"],
        value: "com.sap.xs.hdi-container",
    }],
    spaceBefore: true
}

const serviceManager = {
    ref: "service-manager-resource",
    keyPath: ["resources"],
    constraints: [{
        comparisonKeyPath: ["type"],
        value: "org.cloudfoundry.managed-service",
    }, {
        comparisonKeyPath: ["parameters", "service"],
        value: "service-manager",
    }, {
        comparisonKeyPath: ["parameters", "service-plan"],
        value: "container"
    }],
    spaceBefore: true
}

const saasRegistry = {
    ref: "registry-resource",
    keyPath: ["resources"],
    constraints: [{
        comparisonKeyPath: ["type"],
        value: "org.cloudfoundry.managed-service",
    }, {
        comparisonKeyPath: ["parameters", "service"],
        value: "saas-registry",
    }, {
        comparisonKeyPath: ["parameters", "service-plan"],
        value: "application"
    }],
    spaceBefore: true
}

const srvAPI = {
    ref: "srvAPI",
    keyPath: ["provides"],
    constraints: [{
        comparisonKeyPath: ["name"],
        value: "srv-api"
    }, {
        comparisonKeyPath: ["properties", "srv-url"],
        value: "${default-url}"
    }]
}

const mtxSidecar = {
    ref: "sidecar",
    keyPath: ["modules"],
    constraints: [{
        comparisonKeyPath: ["type"],
        value: `nodejs`
    }],
    spaceBefore: true
}

const providedMtxAPI = {
    ref: "provided-mtx-api",
    keyPath: ["provides"],
    constraints: [{
        comparisonKeyPath: ["name"],
        value: "mtx-api"
    }, {
        comparisonKeyPath: ["properties", "mtx-url"],
        value: "${default-url}"
    }]
}

const requiredMtxAPI = {
    ref: "required-mtx-api",
    in: approuter,
    keyPath: ["requires"],
    constraints: [{
        comparisonKeyPath: ["properties", "name"],
        value: "mtx-api"
    }, {
        comparisonKeyPath: ["properties", "url"],
        value: "~{mtx-url}"
    }]
}

const providedMtxSidecarAPI = {
    ref: "provided-mtx-sidecar-api",
    in: mtxSidecar,
    keyPath: ["requires"],
    constraints: [{
        comparisonKeyPath: ["properties", "url"],
        value: "${default-url}"
    }]
}

const requiredMtxSidecarAPI = {
    ref: "required-mtx-sidecar-api",
    in: srvJava,
    keyPath: ["requires"],
    constraints: [{
        comparisonKeyPath: ["properties", "CDS_MULTITENANCY_SIDECAR_URL"],
        value: "~{url}"
    }]
}

const requiredJavaApprouterAPI = {
    ref: "required-java-approuter-api",
    in: srvJava,
    keyPath: ["requires"],
    constraints: [{
        comparisonKeyPath: ["properties", "CDS_MULTITENANCY_APPUI_URL"],
        value: "~{url}"
    }]
}

const providedJavaApprouterAPI = {
    ref: "provided-java-approuter-api",
    in: approuter,
    keyPath: ["requires"],
    constraints: [{
        comparisonKeyPath: ["properties", "url"],
        value: "${default-url}"
    }]
}

module.exports = {
    srvNode,
    srvJava,
    approuter,
    xsuaa,
    auditlog,
    hdbDeployer,
    hdiContainer,
    serviceManager,
    saasRegistry,
    srvAPI,
    mtxSidecar,
    providedMtxAPI,
    requiredMtxAPI,
    providedMtxSidecarAPI,
    requiredMtxSidecarAPI,
    requiredJavaApprouterAPI,
    providedJavaApprouterAPI,
    kibanaLogging
}
