const path = require("path");
const semver = require("semver");

module.exports = {
  meta: {
    docs: {
      description: `Checks whether the minimum Node.js version required by \`@sap/cds\` is achieved.`,
      category: "Environment",
      recommended: true,
      version: "1.0.0",
    },
    severity: "error",
    type: "problem",
  },
  create: function (context) {
    return { all: check_min_node_version }

    function check_min_node_version() {
      const e = context.cds.environment;
      let nodeVersion, nodeVersionCDS;
      if (!e) {
        // Get current and required node versions
        try {
          const CDSPath = require.resolve("@sap/cds/package.json", {
            paths: [path.dirname(context.filePath)],
          });
          const jsonCDS = require(CDSPath);
          nodeVersion = process.version;
          nodeVersionCDS = jsonCDS.engines.node;
        } catch (err) {
          // Do not throw
        }
      } else {
        nodeVersion = e.nodeVersion;
        nodeVersionCDS = e.nodeVersionCDS;
      }
      if (
        nodeVersion &&
        nodeVersionCDS &&
        !semver.satisfies(nodeVersion, nodeVersionCDS, { loose: true })
      ) {
        return `CDS minimum node version of ${nodeVersionCDS} required, found ${nodeVersion}!`;
      }
    }

  },
};
