module.exports = {
  meta: {
    docs: {
      description: "Regular element names should start with lowercase letters.",
      category: "Model Validation",
      version: "1.0.4",
    },
    type: "suggestion",
    hasSuggestions: true,
    messages: {
      startLowercase: "Element name '{{entityName}}.{{elementName}}' should start with a lowercase letter.",
      fixLowercase: "Start element name with a lowercase letter.",
    },
    fixable: "code",
  },
  create: function (context) {
    const { cds, filePath, sourcecode } = context;

    return {
      element: check_start_lowercase,
    };

    function check_start_lowercase(e) {
      if (!filePath.endsWith(".cds")) return;
        const elementName = e.name;
        const entityName = e.parent.name;
        if (elementName && !(entityName.startsWith("localized") || entityName.endsWith("texts"))) {
          if (elementName.charAt(0) !== elementName.charAt(0).toLowerCase() && !["ID"].includes(elementName)) {
            if (e.$location && e.$location.file) {
              const file = e.$location.file;
              const loc = cds.getLocation(elementName, e);
              const fix = (fixer) => {
                const elementNameSanitized = elementName.charAt(0).toLowerCase() + elementName.slice(1);
                const rangeEnd = sourcecode.getIndexFromLoc({
                  line: loc.end.line,
                  column: loc.end.column,
                });
                const rangeBeg = rangeEnd ? rangeEnd - elementNameSanitized.length : 0;
                return fixer.replaceTextRange([rangeBeg, rangeEnd], elementNameSanitized);
              };
              return {
                messageId: "startLowercase",
                loc,
                file,
                data: {
                  entityName,
                  elementName,
                },
                suggest: [
                  {
                    messageId: "fixLowercase",
                    fix,
                  },
                ],
              };
            }
        }
      }
    }
  },
};
