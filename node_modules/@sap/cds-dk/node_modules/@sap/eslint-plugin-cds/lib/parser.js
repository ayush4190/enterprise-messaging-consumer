/**
 * Custom ESLint parser:
 * https://eslint.org/docs/developer-guide/working-with-custom-parsers
 * This file must:
 * - Expose 'parseForESLint' method on the parser which should return the AST,
 *   optional properties services, a scopeManager, and visitorKeys
 * - Expose default method 'parse' which should return the AST
 * Both methods should take in the source code and an optional configuration
 * (parserOptions). Note, that because we use a 'empty' preprocessor, the
 * parser is only used by ESLint's ruleTester.
 */
 const { getAST } = require("./utils/model");

module.exports = {
  parse: function (code, options) {
    return module.exports.parseForESLint(code, options).ast;
  },

  parseForESLint: function (code) {
    return {
      ast: getAST(code),
      services: {},
      scopeManager: null,
      tokensAndComments: [],
      visitorKeys: null,
    };
  },
};
